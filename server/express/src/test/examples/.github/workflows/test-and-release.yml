name: Test and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info

  release:
    name: Release
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Get version from tag
        id: get_version
        run: echo "::set-output name=version::${GITHUB_REF#refs/tags/v}"

      - name: Check package version
        run: |
          PKG_VERSION=$(node -p "require('./package.json').version")
          if [ "v$PKG_VERSION" != "${{ github.ref_name }}" ]; then
            echo "Package version ($PKG_VERSION) does not match tag (${{ github.ref_name }})"
            exit 1
          fi

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            Please refer to [CHANGELOG.md](./CHANGELOG.md) for details.

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v3

      - name: Dependency Review
        uses: actions/dependency-review-action@v3

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit

  verify-docs:
    name: Verify Documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Check for required files
        run: |
          for file in README.md CONTRIBUTING.md LICENSE CHANGELOG.md; do
            if [ ! -f "$file" ]; then
              echo "Missing required file: $file"
              exit 1
            fi
          done

      - name: Verify links in docs
        uses: gaurav-nelson/github-action-markdown-link-check@v1

  verify-formatting:
    name: Verify Formatting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format:check

  notify:
    name: Notify
    needs: [test, release]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Notify success
        if: ${{ success() }}
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: 'test-utils-releases'
          slack-message: '✅ Successfully released version ${{ github.ref_name }}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify failure
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v1
        with:
          channel-id: 'test-utils-releases'
          slack-message: '❌ Release failed for ${{ github.ref_name }}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}