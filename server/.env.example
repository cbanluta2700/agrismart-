# Application
NODE_ENV=development
PORT=3001

# Database
DATABASE_URL=postgresql://user:password@localhost:5432/agrismart

# Security
JWT_SECRET=your-32-character-secret-key-here
JWT_EXPIRY=7d
CORS_ORIGINS=http://localhost:3000

# Redis
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=

# AWS S3
AWS_S3_BUCKET=agrismart-uploads
AWS_ACCESS_KEY_ID=your-access-key
AWS_SECRET_ACCESS_KEY=your-secret-key
AWS_REGION=ap-southeast-1

# Email (SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-specific-password
SMTP_FROM=noreply@agrismart.com

# Rate Limiting
RATE_LIMIT_WINDOW=900000  # 15 minutes in milliseconds
RATE_LIMIT_MAX=100

# File Upload
UPLOAD_MAX_SIZE=5242880  # 5MB in bytes
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/gif,application/pdf

# Session
SESSION_SECRET=your-session-secret-here
SESSION_MAX_AGE=604800000  # 7 days in milliseconds

# Logging
LOG_LEVEL=debug
LOG_FORMAT=combined

# Monitoring
SENTRY_DSN=
NEW_RELIC_LICENSE_KEY=

# Feature Flags
ENABLE_2FA=true
ENABLE_EMAIL_VERIFICATION=true
ENABLE_PASSWORD_RESET=true

# External Services
STRIPE_SECRET_KEY=your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=your-stripe-webhook-secret

# Development
DEBUG=agrismart:*
ENABLE_SWAGGER=true
ENABLE_API_LOGS=true

# These are example values. In production:
# 1. Use strong, unique secrets
# 2. Never commit .env file to version control
# 3. Use a secure secret management system
# 4. Enable all security features
# 5. Use SSL/TLS for all connections
# 6. Set appropriate CORS origins
# 7. Configure rate limiting per environment
# 8. Enable monitoring and logging